# Jaime Salcedo
# 12/05/2021
# National Louis University

###Lost in the Hunt of a Dreaming Despair v2.0 (Final Version)

						             -----------Technical Documentation: -----------

========================================================================================================================================================================================

							             ===---GENERAL INFORMATION---===
Question to help you understand the game better: 

1). What is it? Lost in the Hunt of a Dreaming Despair is a short text-based story adventure game.
2). How does it work? It works by simply choosing the right paths to eventually get through chapters and get to the end of the storyline. 
3.) How do I play? You can play the game by simply running the main.py file.
4.) Any interesting fact? Branches organize the program/game. Certain branches will force the player to start the current chapter in which the player 
is currently at, and it will force the player to repeat the chapter until this one finds the correct path/choice. If the correct path/choice is found, 
the player will be able to move on to the next path or chapter; if not, it is game over or chapter-retake. 
5.)  Did you added more features to the game? My response: Yes, I did. I added sounds and text colors.
6.) What languages are available? Only English.

Game Objective:
Read an excellent story & find the right paths to get to the end of the game.
========================================================================================================================================================================================
								      ===---FEEDBACK & UPDATES---===
Updates:

Feedback from my teacher: (IMPORTANT)
- New branches were added.
- Branches/options do not simply terminate the game. They continue just as the flow chart itself. (I fixed my code considering the feedback from Milestone 1 & 2).
- It directs the players to sub-branches/sub-paths, chapters and if the player chooses the wrong path, it will either terminate the game or it will have the player repeat the chapter.
- My game is officially done.It is playable and bug-free. (It is has also been uploaded & revised through pythonanywhere).
- The timer or delay for the dialogues to be played are set to 0 for testing purposes, so it is easy for anyone to revise and go through all 
the chapters without the need of waiting for each dialogue to be played (I did this mainly so this way you know that the game is error-free).
========================================================================================================================================================================================
								     ====---SYSTEM REQUIREMENTS---===
Installation: 
Lost in the Hunt of Despair runs on any computer capable of using Python language. If you don't have Python installed, 
please visit https://python.org to download it.

Intructions: (how to play & run the program)
Simply run main.py:
- While playing, you will be given input prompts, usually predicated by numbered lists (1.,2.,3.,etc.). 
- Enter an appropriate character (usually a number or Yes/No) to 
continue the game based on that choice.
========================================================================================================================================================================================
							           ===---CODE INFORMATION & STRUCTURE---===

1). The game works with branches, and it is organized as follows: Intro - Chapter - Scene - descriptive story/intro - Player Actions - choices/Paths - Chapter 
2). There is a timer for each dialogue to be played. It is measured in seconds.
3). Each branch leads the player to a different branch or different file, also called chapter file.
4). Flow Structure: Main.py - Introduction - Chapter 1 - Chapter 2 - Chapter 3 - Chapter 4 - Chapter 5 files. 
5). Currently using modules: 
- from ____ import_______ - Make the game able to transfer from one chapter to another.
- import time  - Timer for dialogues.
- import sys - Timer for text characters to be played (Makes the game more interesting).
- import winsound - Bring the sound module to play sound effects (Notice it only works with wav format audio).
6) Using functions:
- int(input( - Used to request player's actions.
- if, elif - used to provide player's actions alternatives/or options.
- def - define a module.
- print - Output/show text.
- for in - locate positions.
- sys.stdout.write(character) - Used to play the text in a fancier way.
- sys.stdout.flush() - Used to play the text in a fancier way.
- time.sleep(a) - Used to set timers.
- text color functions, such as RED = '\033[31m'
- winsound.PlaySound("example", winsound.SND_ALIAS | winsound.SND_ASYNC) - Used to play sounds as background.
-  winsound.PlaySound(None, winsound.SND_ALIAS)  - Used to stop sounds from playing.
-  winsound.PlaySound("example", winsound.SND_ALIAS) - Used to stop text from running until the sound is completely played.


========================================================================================================================================================================================
   								      ===---IN CASE OF ERRORS---===

- As a suggestion I recommend running and editing this game on Pycharm (an editing program) as it is easier to spot errors.
- Python will be updated in the future and they might update certain modules, which might cause errors, in case this happens,
please visit "https://www.jetbrains.com/help/pycharm/update.html" for more information. 
- If you are interested in implementing ideas and making further improvements on this project please don't hesitate to shoot me an email at 
sgjimmy93@gmail.com. 